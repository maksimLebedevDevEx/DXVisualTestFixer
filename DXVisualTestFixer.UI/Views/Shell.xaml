<dx:ThemedWindow x:Class="DXVisualTestFixer.UI.Views.Shell"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                 xmlns:native="clr-namespace:DXVisualTestFixer.UI.Native"
                 xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                 xmlns:prism="http://prismlibrary.com/"
                 xmlns:common="clr-namespace:DXVisualTestFixer.Common;assembly=DXVisualTestFixer.Common"
                 xmlns:prismcommon="clr-namespace:DXVisualTestFixer.UI.PrismCommon"
                 xmlns:converters="clr-namespace:DXVisualTestFixer.UI.Converters"
                 xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                 dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                 UseLayoutRounding="True"
                 ShowActivated="True"
                 mc:Ignorable="d"
                 WindowKind="Ribbon"
                 prism:ViewModelLocator.AutoWireViewModel="True"
                 Icon="../89.ico"
                 Title="{DXBinding Expr='`Visual Tests Tool v` + $native:VersionHelper.Version + ` for ` + $native:VersionHelper.Platform'}" MinHeight="768"
                 MinWidth="1024"
                 prismcommon:PrismExtensions.ViewModel="{Binding}"
                 HeaderItemsSource="{Binding Commands}"
                 Loaded="{DXEvent Handler='ShowWhatsNew()'}">
    <dx:ThemedWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DXVisualTestFixer.UI;component/Resources/LayoutPanel.xaml" />
                <ResourceDictionary Source="/DXVisualTestFixer.UI;component/Resources/Services.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <dxmvvm:ObjectToObjectConverter x:Key="NoneConverter" DefaultTarget="Visible">
                <dxmvvm:MapItem Source="None" Target="Collapsed" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="ReadyConverter" DefaultTarget="Collapsed">
                <dxmvvm:MapItem Source="Ready" Target="Visible" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="DownloadingConverter" DefaultTarget="Collapsed">
                <dxmvvm:MapItem Source="Downloading" Target="Visible" />
            </dxmvvm:ObjectToObjectConverter>
            <Style TargetType="{x:Type dx:HeaderItemControl}">
                <Setter Property="Command" Value="{Binding}" />
                <Setter Property="ToolTip" Value="Update application" />
                <Setter Property="Visibility"
                        Value="{Binding Path=(prismcommon:PrismExtensions.ViewModel).UpdateState, RelativeSource={RelativeSource Self}, Converter={StaticResource NoneConverter}}" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <Grid ClipToBounds="True">
                                <dx:DXImage x:Name="img_loaded" Source="{dx:DXImage SvgImages/Arrows/MoveUp.svg}"
                                            VerticalAlignment="Center" HorizontalAlignment="Center" Height="16"
                                            Width="16"
                                            dxb:ImageColorizer.Color="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                            dxb:ImageColorizer.IsEnabled="True">
                                    <dx:DXImage.Style>
                                        <Style TargetType="{x:Type dx:DXImage}">
                                            <Setter Property="Visibility"
                                                    Value="{Binding Path=(prismcommon:PrismExtensions.ViewModel).UpdateState, RelativeSource={RelativeSource Self}, Converter={StaticResource ReadyConverter}}" />
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="True">
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                                 From="1" To="0" AutoReverse="True"
                                                                                 BeginTime="0:0:1"
                                                                                 RepeatBehavior="Forever" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </dx:DXImage.Style>
                                </dx:DXImage>
                                <Border x:Name="img_updating" VerticalAlignment="Center" HorizontalAlignment="Center"
                                        ClipToBounds="True" BorderThickness="0,0,0,1"
                                        BorderBrush="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                        Visibility="{Binding Path=(prismcommon:PrismExtensions.ViewModel).UpdateState, RelativeSource={RelativeSource Self}, Converter={StaticResource DownloadingConverter}}">
                                    <dx:DXImage Height="16" Width="16"
                                                Source="{dx:DXImage SvgImages/Arrows/MoveDown.svg}"
                                                dxb:ImageColorizer.Color="{Binding Path=(TextElement.Foreground), RelativeSource={RelativeSource Self}}"
                                                dxb:ImageColorizer.IsEnabled="True">
                                        <dx:DXImage.Style>
                                            <Style TargetType="dx:DXImage">
                                                <Style.Triggers>
                                                    <Trigger Property="IsVisible" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <ThicknessAnimationUsingKeyFrames
                                                                        Storyboard.TargetProperty="Margin"
                                                                        RepeatBehavior="Forever">
                                                                        <SplineThicknessKeyFrame KeyTime="00:00:00"
                                                                                                 Value="0,-16,0,16" />
                                                                        <SplineThicknessKeyFrame KeyTime="00:00:02"
                                                                                                 Value="0,16,0,-16" />
                                                                    </ThicknessAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </dx:DXImage.Style>
                                    </dx:DXImage>
                                </Border>
                            </Grid>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </dx:ThemedWindow.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding NotificationRequest}">
            <prismcommon:PopupDXMessageBoxAction IsModal="True" CenterOverAssociatedObject="True"
                                                 WindowStyle="{StaticResource NotificationWindowStyle}">
                <prismcommon:PopupDXMessageBoxAction.WindowContent>
                    <ContentControl Content="{Binding Converter={converters:NotificationContentConverter}}" />
                </prismcommon:PopupDXMessageBoxAction.WindowContent>
            </prismcommon:PopupDXMessageBoxAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <ContentControl prism:RegionManager.RegionName="{x:Static common:Regions.Main}" Focusable="False" />
</dx:ThemedWindow>
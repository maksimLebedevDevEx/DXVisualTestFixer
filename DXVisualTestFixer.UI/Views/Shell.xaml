<dx:ThemedWindow x:Class="DXVisualTestFixer.UI.Views.Shell"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DXVisualTestFixer.UI"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
        xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
        xmlns:native="clr-namespace:DXVisualTestFixer.UI.Native"
        xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:common="clr-namespace:DXVisualTestFixer.Common;assembly=DXVisualTestFixer.Common"
        xmlns:prismcommon="clr-namespace:DXVisualTestFixer.UI.PrismCommon"
        xmlns:converters="clr-namespace:DXVisualTestFixer.UI.Converters"
        xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
        UseLayoutRounding="True"
        ShowActivated="True"
        mc:Ignorable="d"
        WindowKind="Ribbon"
        prism:ViewModelLocator.AutoWireViewModel="True"
        Icon="../89.ico"
        Title="{DXBinding Expr='`Visual Tests Tool v` + $native:VersionHelper.Version'}" MinHeight="768" MinWidth="1024"
        HeaderItemsSource="{Binding Commands}">
    <dx:ThemedWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DXVisualTestFixer.UI;component/Resources/LayoutPanel.xaml"/>
                <ResourceDictionary Source="/DXVisualTestFixer.UI;component/Resources/Services.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type dx:HeaderItemControl}">
                <Setter Property="Command" Value="{Binding}"/>
                <Setter Property="Visibility" Value="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={dxmvvm:BooleanToVisibilityConverter}}"/>
                <Setter Property="ToolTip" Value="Update application"/>
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <dx:DXImage x:Name="image" Source="{dx:DXImage SvgImages/Arrows/MoveUp.svg}"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="16" Width="16"
                                        dxb:ImageColorizer.Color="{Binding TextElement.Foreground}" dxb:ImageColorizer.IsEnabled="True"/>
                            <DataTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="image" From="1" To="0" AutoReverse="True" 
                                                             BeginTime="0:0:1" RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </dx:ThemedWindow.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding NotificationRequest}">
            <prismcommon:PopupDXMessageBoxAction IsModal="True" CenterOverAssociatedObject="True" WindowStyle="{StaticResource NotificationWindowStyle}">
                <prismcommon:PopupDXMessageBoxAction.WindowContent>
                    <ContentControl Content="{Binding Converter={converters:NotificationContentConverter}}"/>
                </prismcommon:PopupDXMessageBoxAction.WindowContent>
            </prismcommon:PopupDXMessageBoxAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <ContentControl prism:RegionManager.RegionName="{x:Static common:Regions.Main}" Focusable="False"/>
</dx:ThemedWindow>

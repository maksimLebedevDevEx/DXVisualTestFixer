<UserControl x:Class="DXVisualTestFixer.UI.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:prismcommon="clr-namespace:DXVisualTestFixer.UI.PrismCommon"
             xmlns:converters="clr-namespace:DXVisualTestFixer.UI.Converters"
             xmlns:controls="clr-namespace:DXVisualTestFixer.UI.Controls"
             prism:ViewModelLocator.AutoWireViewModel="False"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/DXVisualTestFixer.UI;component/Resources/Services.xaml" />
                <ResourceDictionary Source="/DXVisualTestFixer.UI;component/Resources/LoadingButtonResources.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="ListBoxEditStyle" TargetType="dxe:ListBoxEdit">
                        <Setter Property="ItemContainerStyle">
                            <Setter.Value>
                                <Style TargetType="{x:Type dxe:ListBoxEditItem}">
                                    <Setter Property="Margin" Value="5" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type dxe:ListBoxEditItem}">
                                                <ContentPresenter Content="{Binding}"
                                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <Border CornerRadius="5" Background="LightBlue">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Version}" FontSize="30" VerticalAlignment="Center" />
                                            <controls:LoadingButton Grid.Column="1" Click="{DXEvent Handler='Download()'}">
                                                <controls:LoadingButton.LoadingState>
                                                    <Binding Path="DownloadState">
                                                        <Binding.Converter>
                                                            <dxmvvm:ObjectToObjectConverter DefaultTarget="Disabled">
                                                                <dxmvvm:MapItem Source="ReadyToDownload" Target="Enabled" />
                                                                <dxmvvm:MapItem Source="Downloading" Target="Loading" />
                                                                <dxmvvm:MapItem Source="Downloaded" Target="Loaded" />
                                                            </dxmvvm:ObjectToObjectConverter>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </controls:LoadingButton.LoadingState>
                                            </controls:LoadingButton>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ItemsPanel">
                            <Setter.Value>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <i:Interaction.Triggers>
        <prism:InteractionRequestTrigger SourceObject="{Binding ConfirmationRequest}">
            <prismcommon:PopupDXMessageBoxAction IsModal="True" CenterOverAssociatedObject="True"
                                                 WindowStyle="{StaticResource NotificationWindowStyle}">
                <prismcommon:PopupDXMessageBoxAction.WindowContent>
                    <ContentControl Content="{Binding Converter={converters:NotificationContentConverter}}" />
                </prismcommon:PopupDXMessageBoxAction.WindowContent>
            </prismcommon:PopupDXMessageBoxAction>
        </prism:InteractionRequestTrigger>
    </i:Interaction.Triggers>
    <dx:DXTabControl>
        <dx:DXTabItem Header="Repositories">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <GroupBox Header="Auto loader" Margin="5">
                    <dx:BackgroundPanel>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <TextBlock Margin="10">
                                <Run>Select work directory. Sources will be downloaded in it. For example:</Run>
                                <Run FontWeight="DemiBold">"c:\work"</Run>
                            </TextBlock>
                            <TextBlock Grid.Row="1" Padding="5"
                                       Text="{Binding WorkingDirectory, StringFormat='Current Working Directory: {0}'}" />
                            <Button Grid.Row="2" Padding="5" Margin="5" Content="Change Work Directory"
                                    Click="{DXEvent Handler='SelectWorkDirectory()'}" />
                        </Grid>
                    </dx:BackgroundPanel>
                </GroupBox>
                <StackPanel Grid.Row="1" Orientation="Horizontal">
                    <TextBlock Text="User Name:" Margin="2" VerticalAlignment="Center"/>
                    <dxe:ButtonEdit x:Name="cbVolunteer" EditValue="{Binding Volunteer}" Width="150"
                                      NullText="{Binding IsVolunteerLoading, Converter={dxmvvm:BooleanToObjectConverter TrueValue='Auto detecting user...', FalseValue='Enter your domain name here'}}" 
                                      Margin="2" AllowDefaultButton="False"
                                      IsTextEditable="{Binding IsVolunteerLoading, Converter={dxmvvm:BooleanNegationConverter}}">
                        <dxe:ButtonEdit.Buttons>
                            <dxe:LoadingIndicatorButtonInfo IsLeft="False" Visibility="{Binding IsVolunteerLoading, Converter={dx:BooleanToVisibilityConverter}}"/>
                        </dxe:ButtonEdit.Buttons>
                        <dxe:ButtonEdit.Style>
                            <Style TargetType="{x:Type dxe:TextEdit}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Volunteer}" Value="{x:Null}"/>
                                            <Condition Binding="{Binding IsVolunteerLoading}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="Red" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding IsVolunteerLoading}" Value="True">
                                        <Setter Property="Background" Value="LightYellow" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </dxe:ButtonEdit.Style>
                    </dxe:ButtonEdit>
                    <!-- <TextBlock Text="{Binding Email, StringFormat=Email:{0}}" Margin="2"/> -->
                    <!-- <TextBlock Text="User not found on domain." Foreground="Black" Margin="2" Visibility="{Binding IsVolunteerValid, Converter={dx:BooleanToVisibilityConverter Invert=True}}"/> -->
                </StackPanel>
                <StackPanel Grid.Row="2" Orientation="Horizontal">
                    <TextBlock Text="Default Platform:" Margin="2" VerticalAlignment="Center"/>
                    <dxe:ComboBoxEdit x:Name="cbDefaultPlatform" ItemsSource="{Binding PlatformModels}" EditValue="{Binding DefaultPlatform, UpdateSourceTrigger=PropertyChanged}" Width="150"
                                      NullText="Select Default Platform" IsTextEditable="False" Margin="2">
                        <dxe:ComboBoxEdit.Style>
                            <Style TargetType="{x:Type dxe:ComboBoxEdit}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding DefaultPlatform}" Value="{x:Null}">
                                        <Setter Property="Background" Value="Red" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </dxe:ComboBoxEdit.Style>
                    </dxe:ComboBoxEdit>
                </StackPanel>
                <ItemsControl Grid.Row="3" ItemsSource="{Binding PlatformModels}" Grid.IsSharedSizeScope="True">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="platformName"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Platform.Name}" VerticalAlignment="Center" FontSize="26" Margin="2"/>
                                <dxe:ListBoxEdit Grid.Column="1" ItemsSource="{Binding Repositories}" Style="{StaticResource ListBoxEditStyle}"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
        </dx:DXTabItem>
    </dx:DXTabControl>

</UserControl>